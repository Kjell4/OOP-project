package Authorization;
import java.sql.Date;
import SystemParts.Mark;
import Users.*;
import Enums.*;

public class Test {

	public static void main(String[] args) {
		Admin adminEren = new Admin("eren", "745f0", "Eren", "Yeager", "22B040578", EmployeePost.ADMIN, 145000, Date.valueOf("2023-02-21"));
		Manager managerAzamat = new Manager("azzza", "aboba", "Azamat", "Alpysbay", "22B010445", EmployeePost.MANAGER, 451000, Date.valueOf("2022-12-12"), ManagerType.DEPARTMENT);
		managerAzamat.addRequest(adminEren.makeRequest("Complain", "Wifi is not working", OrderType.COMPLAINT));
		System.out.println(managerAzamat.viewRequests());
		Dean dean = new Dean("Obama", "Barack", "DS78450A", "passworddd");
		dean.signOrder(adminEren.getEmployeeOrder());
		managerAzamat.addRequest(adminEren.getEmployeeOrder());
		System.out.println(managerAzamat.viewRequests());

		Admin admin = new Admin("admin", "777", "Bibolat", "Kaldybai", "22B000000", EmployeePost.ADMIN, 124000, Date.valueOf("2023-03-22"));

		User u = new Researcher("ilias", "1234", "Ilias", "Bekturgan", "22B030327");
		
		User u2 = new Manager("dias", "1111", "Dias", "Ermek", "22B6564684", EmployeePost.MANAGER, 114000, Date.valueOf("2023-02-01"), ManagerType.OR);
		
		admin.addUser(u , "777");
		admin.addUser(u2 , "777");

		Session session = new Session();
		session.login(admin.showDatabase() , "ilias", "1234");
		
		Researcher currentUser = (Researcher)session.getCurrentUser();
		System.out.println(currentUser);
		
		currentUser.makeResearchPaper("Clean Code", Date.valueOf("2023-03-03"), 50, "AlmatyKitap", "pakita");
		currentUser.makeResearchPaper("Retake", Date.valueOf("2023-01-03"), 41, "Atamura", "pakita");
//		currentUser.printPapersByPublishedDate();
		currentUser.printPapersByArticleLength();
		currentUser.getCitation(0, "Bibtex");
	
		session.logout();
		currentUser = (Researcher) session.getCurrentUser();
		System.out.println(currentUser);
		
//		Session session = new Session();
//		session.login(admin.showDatabase() , "dias", "1111");
//		
//		Manager currentUser = (Manager)session.getCurrentUser();
//		currentUser.addCourses(new Course("OOP", "CSCI2106", 5, Faculty.SITE, CourseType.BASIC));
//		System.out.println(currentUser.getCourses());
//		
//		session.logout();
//		currentUser = (Manager) session.getCurrentUser();
////		System.out.println(currentUser);

	Mark firstAttestationMark = new Mark();
    firstAttestationMark.setType(AttestationType.FIRST);
    firstAttestationMark.defineMark(25); 
    System.out.println("First Attestation Mark: " + firstAttestationMark);

    

    Mark secondAttestationMark = new Mark();
    secondAttestationMark.setType(AttestationType.SECOND);
    secondAttestationMark.defineMark(32);
    System.out.println("Second Attestation Mark: " + secondAttestationMark);

    Mark finalExamMark = new Mark();
    finalExamMark.setType(AttestationType.EXAM);
    finalExamMark.defineMark(30);
    System.out.println("Final Exam Mark: " + finalExamMark);
    
    
    
    double totalGrade = firstAttestationMark.getFirstAttestation() + secondAttestationMark.getSecondAttestation() + finalExamMark.getExamMark();
    System.out.println("Total Grade: " + totalGrade);
	}
}
